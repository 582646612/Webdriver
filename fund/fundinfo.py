#-*- encoding: UTF-8 -*-
import scrapy
import requests
from bs4 import BeautifulSoup
import re
import urllib.request
from dbinsert import DBHelper


def parse(num):
    url='http://fund.eastmoney.com/'+num+'.html'
    response = urllib.request.urlopen(url)
    content = response.read().decode('utf-8')
    soup = BeautifulSoup(content, 'html.parser')
    tags = soup.find_all('dd')
    items = soup.select('[class~=infoOfFund]')[0].select('td')
    item={}
    try:
        item['code'] = soup.find('span',class_='fix_fcode').get_text()
        item['name'] = soup.find('span', class_='fix_fname').get_text()
        # item['unit_value'] = soup.find('span',class_="fix_dwjz bold ui-color-red").get_text()
        # item['sum_value'] =soup.find('span',class_="fix_zzl bold ui-color-red").get_text()
        item['manager'] =items[2].get_text()
        item['type'] =items[0].get_text()
        item['company'] =items[4].get_text()
        item['scale'] =items[1].get_text()
        item['establish'] =items[3].get_text()
        # item['near_month'] = tags[1].find_all('span')[1].string
        # item['near_three_month'] = tags[4].find_all('span')[1].string
        # item['near_six_month'] = tags[7].find_all('span')[1].string
        # item['near_year'] =tags[2].find_all('span')[1].string
        # item['near_three_year'] =tags[5].find_all('span')[1].string
        # item['from_found'] =tags[8].find_all('span')[1].string

    except Exception as e:
        print(e)
    return item
if __name__ == '__main__':
    y=['000091', '000092', '000177', '000303', '000304', '000387', '000430', '000485', '000486', '000487', '000488', '000657', '000658', '000659', '000660', '000661', '000770', '000783', '000784', '000856', '001046', '001066', '001253', '001262', '001274', '001368', '001377', '001378', '001428', '001456', '001523', '001619', '001620', '001649', '001670', '001671', '001680', '001683', '001757', '001769', '001772', '001773', '001774', '001777', '001778', '001784', '001785', '001872', '001896', '001900', '002007', '002094', '002166', '002208', '002209', '002223', '002225', '002226', '002232', '002240', '002241', '002344', '002365', '002366', '002371', '002390', '002457', '002469', '002481', '002532', '002674', '002675', '002815', '002816', '002834', '002839', '002853', '002854', '002931', '002953', '002954', '003244', '003245', '003247', '003248', '003441', '003443', '003449', '003451', '003570', '003572', '003666', '003677', '003778', '003779', '003810', '003864', '003868', '003879', '003895', '003896', '003897', '003936', '003937', '004034', '004035', '004049', '004051', '004116', '004256', '004356', '004570', '004577', '004578', '004589', '004632', '004638', '004646', '004660', '004675', '004832', '004864', '004922', '004924', '004950', '004954', '004955', '004980', '005060', '005086', '005087', '005129', '005131', '005132', '005195', '005196', '005199', '005214', '005350', '005365', '005389', '005394', '005408', '005411', '005513', '005514', '005584', '005591', '005595', '005605', '005649', '005673', '005697', '005792', '005850', '005858', '005863', '005914', '005915', '005916', '005929', '005930', '005941', '005950', '006013', '006014', '006017', '006018', '006028', '006046', '006051', '006052', '006078', '006079', '006083', '006105', '006108', '006118', '006121', '006122', '006125', '006126', '006155', '006156', '006167', '006168', '006179', '006189', '006199', '006200', '006218', '006227', '006228', '006229', '006238', '006239', '006250', '006254', '006270', '006271', '006281', '006284', '006316', '006326', '006349', '006350', '006351', '006352', '006356', '006357', '006391', '006392', '006394', '006413', '006414', '006418', '006445', '006446', '006447', '006448', '006451', '006452', '006489', '006490', '006522', '006523', '006527', '006528', '006535', '006536', '006549', '006555', '006556', '006557', '006580', '006581', '006583', '006584', '006601', '006602', '006603', '006604', '006605', '006613', '006620', '006621', '006631', '006632', '006643', '006644', '006650', '006665', '006666', '006687', '006688', '006690', '006691', '006692', '006693', '006696', '006698', '006699', '006700', '006701', '006709', '006710', '006714', '006720', '006721', '006722', '006723', '006726', '006736', '006743', '006744', '006749', '006750', '006751', '006754', '006755', '006760', '006771', '006773', '006774', '006776', '006777', '006778', '006779', '006780', '006783', '006784', '006785', '006791', '006793', '006794', '006796', '006797', '006798', '006803', '006813', '006816', '006817', '006818', '006819', '006834', '006835', '006838', '006839', '006840', '006841', '006843', '006844', '006845', '006857', '006858', '006887', '006888', '006901', '006902', '006903', '006907', '006908', '006917', '006925', '006929', '006932', '006933', '006934', '006935', '006936', '006949', '040028', '040029', '040030', '040031', '040033', '040034', '080010', '121013', '128013', '150036', '150037', '150107', '150124', '150138', '150167', '150168', '150172', '150187', '150232', '150258', '150260', '150281', '150282', '150284', '150294', '150298', '150309', '150310', '150311', '150312', '159946', '159962', '159963', '159965', '160814', '161118', '161122', '161123', '161811', '165523', '165524', '165525', '166022', '501063', '501069', '501070', '501189', '502010', '502012', '502013', '502014', '502015', '502020', '502021', '502022', '502038', '502040', '502041', '502042', '502048', '502050', '502053', '502054', '502055', '505888', '510190', '510350', '510890', '512270', '512380', '512590', '512830', '519059', '519131', '519513', '519633', '519634', '519649', '519650', '519781']
    db=DBHelper()
    for x in y:
        try:
            item=parse(x)
            # print(item)
            db.insertfundinfo(item)
        except Exception as e:
            print(e)